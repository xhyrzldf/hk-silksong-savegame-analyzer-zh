import type { TabId } from '../tabs/types';

export type ParserKey = 'Hornet' | 'Tools' | 'Crests' | 'AncestralArts' | 'Relics';

export type JsonPointer = string;

export interface ValueSourceDefinition {
  kind: 'value';
  path: JsonPointer;
}

export interface ArraySourceDefinition {
  kind: 'array';
  path: JsonPointer;
  matchField: string;
  values: string[];
  valuePath?: JsonPointer;
}

export type DataSourceDefinition = ValueSourceDefinition | ArraySourceDefinition;

export type BooleanCheckMode = 'truthy' | 'equals' | 'gte' | 'exists';

export interface BooleanCheckDefinition {
  type: 'boolean';
  mode?: BooleanCheckMode;
  expectedValue?: unknown;
  valuePath?: JsonPointer;
}

export interface CountCheckDefinition {
  type: 'count';
  valuePath?: JsonPointer;
  maxValue?: number;
  format?: 'number' | 'duration';
}

export type CheckDefinition = BooleanCheckDefinition | CountCheckDefinition;

export interface ParserItemDefinition {
  id: string;
  displayName: string;
  dataSource: DataSourceDefinition;
  check: CheckDefinition;
  spoiler?: boolean;
  wikiLink?: string | null;
  mapLink?: string | null;
  progressValue?: number;
}

export interface ParserSectionDefinition {
  id: string;
  label: string;
  items: ParserItemDefinition[];
}

export interface ParserTabDefinition {
  parserKey: ParserKey;
  tabId: TabId;
  sections?: ParserSectionDefinition[];
  items?: ParserItemDefinition[];
}

const TOOL_SOURCE_PATH: JsonPointer = 'playerData.Tools.savedData';
const CREST_SOURCE_PATH: JsonPointer = 'playerData.ToolEquips.savedData';
const RELIC_SOURCE_PATH: JsonPointer = 'playerData.Relics.savedData';
const COLLECTABLE_SOURCE_PATH: JsonPointer = 'playerData.Collectables.savedData';

const TOOL_UNLOCK_CHECK: BooleanCheckDefinition = {
  type: 'boolean',
  mode: 'truthy',
  expectedValue: true,
  valuePath: 'Data.IsUnlocked',
};

const CREST_OWNED_CHECK: BooleanCheckDefinition = {
  type: 'boolean',
  mode: 'exists',
};

const RELIC_COLLECTED_CHECK: BooleanCheckDefinition = {
  type: 'boolean',
  mode: 'truthy',
  expectedValue: true,
  valuePath: 'Data.IsCollected',
};

const createNameMatchSource = (path: JsonPointer, values: string[], valuePath?: JsonPointer): ArraySourceDefinition => ({
  kind: 'array',
  path,
  matchField: 'Name',
  values,
  valuePath,
});
export const parserBlueprints: ParserTabDefinition[] = [
  {
    parserKey: 'Hornet',
    tabId: 'Hornet',
    sections: [
      {
        id: 'overview',
        label: 'Overview',
        items: [
          {
            id: 'playtime',
            displayName: 'Playtime',
            dataSource: { kind: 'value', path: 'playerData.playTime' },
            check: { type: 'count', format: 'duration' },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
          },
          {
            id: 'rosaries',
            displayName: 'Rosaries',
            dataSource: { kind: 'value', path: 'playerData.geo' },
            check: { type: 'count' },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
          },
          {
            id: 'shell-shards',
            displayName: 'Shell Shards',
            dataSource: { kind: 'value', path: 'playerData.ShellShards' },
            check: { type: 'count' },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
          },
        ],
      },
      {
        id: 'progression',
        label: 'Progression',
        items: [
          {
            id: 'health-masks',
            displayName: 'Health Masks',
            dataSource: { kind: 'value', path: 'playerData.maxHealth' },
            check: { type: 'count', maxValue: 10 },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 5,
          },
          {
            id: 'silk-spools',
            displayName: 'Silk Spools',
            dataSource: { kind: 'value', path: 'playerData.silkMax' },
            check: { type: 'count', maxValue: 18 },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 9,
          },
          {
            id: 'silk-hearts',
            displayName: 'Silk Hearts',
            dataSource: { kind: 'value', path: 'playerData.silkRegenMax' },
            check: { type: 'count', maxValue: 3 },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 3,
          },
          {
            id: 'nail-upgrades',
            displayName: 'Nail Upgrades',
            dataSource: { kind: 'value', path: 'playerData.nailUpgrades' },
            check: { type: 'count', maxValue: 4 },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 4,
          },
          {
            id: 'tool-pouch-upgrades',
            displayName: 'Tool Pouch Upgrades',
            dataSource: { kind: 'value', path: 'playerData.ToolPouchUpgrades' },
            check: { type: 'count', maxValue: 4 },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 4,
          },
          {
            id: 'tool-kit-upgrades',
            displayName: 'Tool Kit Upgrades',
            dataSource: { kind: 'value', path: 'playerData.ToolKitUpgrades' },
            check: { type: 'count', maxValue: 4 },
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 4,
          },
        ],
      },
    ],
  },
  {
    parserKey: 'Tools',
    tabId: 'Tools',
    sections: [
      {
        id: 'silk-skills',
        label: 'Silk Skills',
        items: [
          {
            id: 'silkspear',
            displayName: 'Silkspear',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Silk Spear'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'thread-storm',
            displayName: 'Thread Storm',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Thread Sphere'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'cross-stitch',
            displayName: 'Cross Stitch',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Parry'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'sharpdart',
            displayName: 'Sharpdart',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Silk Charge'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'rune-rage',
            displayName: 'Rune Rage',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Silk Bomb'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'pale-nails',
            displayName: 'Pale Nails',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Silk Boss Needle'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
        ],
      },
      {
        id: 'attack-tools',
        label: 'Attack Tools',
        items: [
          {
            id: 'straight-pin',
            displayName: 'Straight Pin',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Straight Pin'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'threefold-pin',
            displayName: 'Threefold Pin',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Tri Pin'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'sting-shard',
            displayName: 'Sting Shard',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Sting Shard'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'tacks',
            displayName: 'Tacks',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Tack'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'longpin',
            displayName: 'Longpin',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Harpoon'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'curveclaw-curvesickle',
            displayName: 'Curveclaw / Curvesickle',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Curve Claws', 'Curve Claws Upgraded'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'throwing-ring',
            displayName: 'Throwing Ring',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Shakra Ring'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'pimpillo',
            displayName: 'Pimpillo',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Pimpilo'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'conchcutter',
            displayName: 'Conchcutter',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Conch Drill'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'silkshot',
            displayName: 'Silkshot',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['WebShot Architect', 'WebShot Weaver', 'WebShot Forge'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'delvers-drill',
            displayName: 'Delver\'s Drill',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Screw Attack'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'cogwork-wheel',
            displayName: 'Cogwork Wheel',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Cogwork Saw'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'cogfly',
            displayName: 'Cogfly',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Cogwork Flier'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'rosary-cannon',
            displayName: 'Rosary Cannon',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Rosary Cannon'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'voltvessels',
            displayName: 'Voltvessels',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Lightning Rod'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'flintslate',
            displayName: 'Flintslate',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Flintstone'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'flea-brew',
            displayName: 'Flea Brew',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Flea Brew'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'plasmium-phial',
            displayName: 'Plasmium Phial',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Lifeblood Syringe'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'needle-phial',
            displayName: 'Needle Phial',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Extractor'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 0,
          },
          {
            id: 'snare-setter',
            displayName: 'Snare Setter',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Silk Snare'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 0,
          },
        ],
      },
      {
        id: 'defense-tools',
        label: 'Defense Tools',
        items: [
          {
            id: 'druids-eyes',
            displayName: 'Druid\'s Eye / Druid\'s Eyes',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Mosscreep Tool 1', 'Mosscreep Tool 2'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'magma-bell',
            displayName: 'Magma Bell',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Lava Charm'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'warding-bell',
            displayName: 'Warding Bell',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Bell Bind'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'pollip-pouch',
            displayName: 'Pollip Pouch',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Poison Pouch'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'fractured-mask',
            displayName: 'Fractured Mask',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Fractured Mask'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'multibinder',
            displayName: 'Multibinder',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Multibind'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'weavelight',
            displayName: 'Weavelight',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['White Ring'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'sawtooth-circlet',
            displayName: 'Sawtooth Circlet',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Brolly Spike'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'injector-band',
            displayName: 'Injector Band',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Quickbind'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'spool-extender',
            displayName: 'Spool Extender',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Spool Extender'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'reserve-bind',
            displayName: 'Reserve Bind',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Reserve Bind'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'claw-mirrors',
            displayName: 'Claw Mirror / Claw Mirrors',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Dazzle Bind', 'Dazzle Bind Upgraded'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'memory-crystal',
            displayName: 'Memory Crystal',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Revenge Crystal'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'snitch-pick',
            displayName: 'Snitch Pick',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Thief Claw'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'volt-filament',
            displayName: 'Volt Filament',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Zap Imbuement'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'quick-sling',
            displayName: 'Quick Sling',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Quick Sling'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'wreath-of-purity',
            displayName: 'Wreath of Purity',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Maggot Charm'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'longclaw',
            displayName: 'Longclaw',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Longneedle'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'wispfire-latern',
            displayName: 'Wispfire Latern',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Wisp Lantern'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'egg-of-flealia',
            displayName: 'Egg of Flealia',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Flea Charm'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'pin-badge',
            displayName: 'Pin Badge',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Pinstress Tool'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
        ],
      },
      {
        id: 'explore-tools',
        label: 'Explore Tools',
        items: [
          {
            id: 'compass',
            displayName: 'Compass',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Compass'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'shard-pendant',
            displayName: 'Shard Pendant',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Bone Necklace'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'magnetite-brooch',
            displayName: 'Magnetite Brooch',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Rosary Magnet'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'weighted-belt',
            displayName: 'Weighted Belt',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Weighted Anklet'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'barbed-bracelet',
            displayName: 'Barbed Bracelet',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Barbed Wire'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'dead-bugs-purse',
            displayName: 'Dead Bug\'s Purse / Shell Satchel',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Dead Mans Purse', 'Shell Satchel'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'magnetite-dice',
            displayName: 'Magnetite Dice',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Magnetite Dice'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'scuttlebrace',
            displayName: 'Scuttlebrace',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Scuttlebrace'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'ascendants-grip',
            displayName: 'Ascendant\'s Grip',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Wallcling'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'spider-strings',
            displayName: 'Spider Strings',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Musician Charm'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'silkspeed-anklets',
            displayName: 'Silkspeed Anklets',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Sprintmaster'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
          {
            id: 'thiefs-mark',
            displayName: 'Thief\'s Mark',
            dataSource: createNameMatchSource(TOOL_SOURCE_PATH, ['Thief Charm'], 'Data.IsUnlocked'),
            check: TOOL_UNLOCK_CHECK,
            spoiler: false,
            wikiLink: null,
            mapLink: null,
            progressValue: 1,
          },
        ],
      },
    ],
  },
  {
    parserKey: 'Crests',
    tabId: 'Crests',
    items: [
      {
        id: 'hunter-crest',
        displayName: 'Hunter Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Hunter', 'Hunter_', 'HunterCrest_Upgrade2']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 0,
      },
      {
        id: 'reaper-crest',
        displayName: 'Reaper Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Reaper']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'wanderer-crest',
        displayName: 'Wanderer Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Wanderer']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'beast-crest',
        displayName: 'Beast Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Warrior']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'witch-crest',
        displayName: 'Witch Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Witch']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'architect-crest',
        displayName: 'Architect Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Toolmaster']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'shaman-crest',
        displayName: 'Shaman Crest',
        dataSource: createNameMatchSource(CREST_SOURCE_PATH, ['Spell']),
        check: CREST_OWNED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
    ],
  },
  {
    parserKey: 'AncestralArts',
    tabId: 'Ancestral Arts',
    items: [
      {
        id: 'swift-step',
        displayName: 'Swift Step (Dash / Sprint)',
        dataSource: { kind: 'value', path: 'playerData.hasDash' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'drifters-cloak',
        displayName: 'Drifter\'s Cloak (Glide)',
        dataSource: { kind: 'value', path: 'playerData.hasBrolly' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 0,
      },
      {
        id: 'clawline',
        displayName: 'Clawline (Needle Harpoon)',
        dataSource: { kind: 'value', path: 'playerData.hasHarpoonDash' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'cling-grip',
        displayName: 'Cling Grip (Walljump)',
        dataSource: { kind: 'value', path: 'playerData.hasWalljump' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'needolin',
        displayName: 'Needolin',
        dataSource: { kind: 'value', path: 'playerData.hasNeedolin' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'needle-strike',
        displayName: 'Needle Strike',
        dataSource: { kind: 'value', path: 'playerData.hasChargeSlash' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'faydown-cloak',
        displayName: 'Faydown Cloak (Double Jump)',
        dataSource: { kind: 'value', path: 'playerData.hasDoubleJump' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 0,
      },
      {
        id: 'silk-soar',
        displayName: 'Silk Soar (Highjump)',
        dataSource: { kind: 'value', path: 'playerData.hasSuperJump' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'sylphsong',
        displayName: 'Sylphsong',
        dataSource: { kind: 'value', path: 'playerData.HasBoundCrestUpgrader' },
        check: { type: 'boolean', mode: 'truthy', expectedValue: true },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'everbloom',
        displayName: 'Everbloom',
        dataSource: createNameMatchSource(COLLECTABLE_SOURCE_PATH, ['White Flower'], 'Data.Amount'),
        check: { type: 'boolean', mode: 'gte', expectedValue: 1, valuePath: 'Data.Amount' },
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
    ],
  },
  {
    parserKey: 'Relics',
    tabId: 'Relics',
    items: [
      {
        id: 'bone-record-bone-east-14',
        displayName: 'Bone Record Bone_East_14',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Bone Record Bone_East_14'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'bone-record-greymoor-flooded-corridor',
        displayName: 'Bone Record Greymoor_flooded_corridor',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Bone Record Greymoor_flooded_corridor'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'psalm-cylinder-grindle',
        displayName: 'Psalm Cylinder Grindle',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Psalm Cylinder Grindle'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'seal-chit-ward-corpse',
        displayName: 'Seal Chit Ward Corpse',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Seal Chit Ward Corpse'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'psalm-cylinder-hang',
        displayName: 'Psalm Cylinder Hang',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Psalm Cylinder Hang'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'psalm-cylinder-librarian',
        displayName: 'Psalm Cylinder Librarian',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Psalm Cylinder Librarian'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'librarian-melody-cylinder',
        displayName: 'Librarian Melody Cylinder',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Librarian Melody Cylinder'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'weaver-totem-slab-bottom',
        displayName: 'Weaver Totem Slab_Bottom',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Weaver Totem Slab_Bottom'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'weaver-record-weave-08',
        displayName: 'Weaver Record Weave_08',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Weaver Record Weave_08'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'seal-chit-aspid-01',
        displayName: 'Seal Chit Aspid_01',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Seal Chit Aspid_01'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'bone-record-wisp-top',
        displayName: 'Bone Record Wisp Top',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Bone Record Wisp Top'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'psalm-cylinder-library-roof',
        displayName: 'Psalm Cylinder Library Roof',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Psalm Cylinder Library Roof'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'seal-chit-city-merchant',
        displayName: 'Seal Chit City Merchant',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Seal Chit City Merchant'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'weaver-totem-witch',
        displayName: 'Weaver Totem Witch',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Weaver Totem Witch'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'ancient-egg-abyss-middle',
        displayName: 'Ancient Egg Abyss Middle',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Ancient Egg Abyss Middle'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'weaver-totem-bonetown-upper-room',
        displayName: 'Weaver Totem Bonetown_upper_room',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Weaver Totem Bonetown_upper_room'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'seal-chit-silk-siphon',
        displayName: 'Seal Chit Silk Siphon',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Seal Chit Silk Siphon'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'psalm-cylinder-ward',
        displayName: 'Psalm Cylinder Ward',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Psalm Cylinder Ward'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
      {
        id: 'weaver-record-sprint-challenge',
        displayName: 'Weaver Record Sprint_Challenge',
        dataSource: createNameMatchSource(RELIC_SOURCE_PATH, ['Weaver Record Sprint_Challenge'], 'Data.IsCollected'),
        check: RELIC_COLLECTED_CHECK,
        spoiler: false,
        wikiLink: null,
        mapLink: null,
        progressValue: 1,
      },
    ],
  },
];
